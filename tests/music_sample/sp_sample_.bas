/* sprite sample
int i,j,r,di,x1,y1,x2,y2,x3,y3,y4
char pc,pb, vr, vr_s,vr_s1,hr,hr_s,hr_sl,cd
float f,f1
/* define sprite-pattern
dim char SP0 (255) = {	  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
			 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
			 ,0, 0, 0,11,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
			 ,0, 0, 0,11,11,11, 0, 0, 0, 0, 0,11, 0, 0, 0, 0
			 ,0, 0, 0,11,11,11,10, 0, 0, 0, 0,11,10, 0, 0, 0 
			,13,13, 4,11,11, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0
			,13, 4,12, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0
			 ,4,12, 5,11,11,11,10, 3, 3, 3, 3,11,10, 3, 3, 3
			 ,4,12, 5,11,11,11,10, 3, 3, 3, 3,11,10, 3, 3, 3
			,13, 4,12, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0
			,13,13, 4,11,11, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0
			 ,0, 0, 0,11,11,11,10, 0, 0, 0, 0,11,10, 0, 0, 0
			 ,0, 0, 0,11,11,11, 0, 0, 0, 0, 0,11, 0, 0, 0, 0
			 ,0, 0, 0,11,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
			 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
			 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
}
dim char SP1 (255) = {	 0, 0, 0, 0, 0,14, 0, 0, 0, 0,14, 0, 0, 0, 0, 0
			, 0,12,12,12, 0, 0,14, 0, 0,14, 0, 0,12,12,12, 0
			,12,13,13,13,12, 0,14, 0, 0,14, 0,12,13,13,13,12
			,13,13, 8,13,13,12, 0,14,14, 0,12,13,13, 8,13,13 
			,13, 8,13, 8,13,13, 0, 7, 7, 0,13,13, 8,13, 8,13
			,13,13,13,13,13,13,13, 5, 5,13,13,13,13,13,13,13
			,13,13, 9,13,13, 8,13, 5, 5,13, 8,13,13, 9,13,13
			,13,13,13, 9,13,13,13, 5, 5,13,13,13, 9,13,13,13
			,13,13,13,13, 9,13,13, 5, 5,13,13, 9,13,13,13,13
			,12,13,13, 9,13,13,13, 5, 5,13,13,13, 9,13,13,12
			,12,13,13,13,13,13,13, 3, 3,13,13,13,13,13,13,12
			 ,0,12,13,13,13,13,13, 4, 4,13,13,13,13,13,12, 0
			 ,0,12,13,13,13,13,13, 2, 2,13,13,13,13,13,12, 0
			 ,0, 0,12,13,13,13, 0, 6, 6, 0,13,13,13,12, 0, 0
			 ,0, 0,12,12,12, 0, 0, 0, 0, 0, 0,12,12,12, 0, 0
			 ,0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0
}
/* define background-pattern
dim char BG0 (63) = {	 0, 8, 0, 8, 0, 8, 0, 8
	, 8, 0, 0, 0, 0, 0, 0, 0
	, 0, 0, 0, 0, 0, 0, 0, 8
	, 8, 0, 0, 0, 0, 0, 0, 0
	, 0, 0, 0, 0, 0, 0, 0, 8
	, 8, 0, 0, 0, 0, 0, 0, 0
	, 0, 0, 0, 0, 0, 0, 0, 8
	, 8, 0, 8, 0, 8, 0, 8, 0
}
dim char BG1 (63) = 
(	  0, 0, 0, 0, 0, 0, 0, 0
	, 0,10, 0,10, 0,10, 0, 0
	, 0, 0, 0, 0, 0, 0,10, 0
	, 0,10, 0, 0, 0, 0, 0, 0
	, 0, 0, 0, 0, 0, 0,10, 0
	, 0,10, 0, 0, 0, 0, 0, 0
	, 0, 0,10, 0,10, 0,10, 0
	, 0, 0, 0, 0, 0, 0, 0, 0
}
/* main */
screen 0,3,1,1 /* 表示画面サイズ 256*256 (768*512以
sp_init() /*スプライト画面の初期化
sp_clr(0,255) /* スプライトパターンのクリア (0~255)
sp_disp(1) /* スプライトブレーンの表示 (0~127)
sp_on(0,3) /* スプライト画面の表示 (0なら表示せず）
/* set sprite-pattern & background-pattern 
sp_def(0,SP0,1) /*16*16 dots
sp_def(1,SP1,1) /*16*16 dots
sp_def(8,BG0,0) /* 8*8 dots
sp_def(9,BG1,0) /* 8*8 dots
sp_def(3,SP0,1) /*16*16 dots
sp_def(4,SP1,1) /*16*16 dots
/* set palet-block
for i=2 to 3
	pb=i
	if i=2 then r=28010 else r=-8000
	for j=0 to 15
		pc=j
		randomize(r+pi(i*10)*j)
		sp_color(pc,hsv(rnd()*192,rnd (1+32,31)+1 ,pb)
	next
next
/* set background 0
bg_fill(0,pat_dat(0,0,1,8))
bg_set(0,0,1)
/* set background 1
bg_fill(1,pat_dat(0,0,1,9))
bg_set(1,1,1)
/* set sprite-plane 0,1,2,3 & background 0,1
i=0:di=1:hr =1:y2=8
while -1
	i=i+di
	/* background scroll
	if x3=511 then x3=0
	if y3=511 then y3=0
	x3=x3+1
 	y3=y3+1
 	bg_scroll(0,x3,y3)
 	bg_scroll(1,511-x3,511-y3)
 	/* move sprite/ 
 	if i<l then hr_s=0:vr_s=0: s1=1:vr =1: i=1 :y2=y2+8
 	if i>286 then hr_s s=1 :vr_8 R=1:h1 =0:vr_s1=0: di=-1 :y2=y2+8
 	f=(pi(2)*i)/288*2
 	f1=(pi(2)*i)/288*4
 	y1=128-150*sin(f)
 	y4-128-120*cos(fl)
 	if y1<0 then vr_s=1:yl=0
 	if y4<9 then vr_s1=0
 	if yl>277 then vr s=0
 	if y4>247 then vr_s1=1
 	if y2>271 then y2=0
 	/* プライオリティ (sprite > background0 > background1)
 	sp_set(0,i,y2,pat_dat(0,hr_s,1,0),3)
 	sp_set(1,i,yl,pat_dat(vr_s,0,1,1),3)
 	sp_set(3,288-i, 248-y4,pat_dat(vr_s1,0,3,4),3)
 	sp_set(2,288-i,272-y2,pat_dat(0,hr_s1,2,3),3) 
 endwhile
 end
 func pat_dat(vr,hr,pb,cd)
 /* vr = 垂直反転 (0なら反転しない、1なら反転する)
 /* hr = 水平反転 (0なら反転しない、1なら反転する)
 /* pb = パレットブロック (1~15の値) 1260 /* cd = バターンコード (0~255 の値)
 	return (vr32768+hr*16384+pb+256+cd)
 endfunc
